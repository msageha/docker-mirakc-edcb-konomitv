networks:
  tv:
    driver: bridge

services:
  # mirakc:
  #   container_name: mirakc
  #   image: docker.io/mirakc/mirakc:alpine
  #   build:
  #     context: https://github.com/mirakc/mirakc.git
  #     dockerfile: docker/Dockerfile.alpine
  #   init: true
  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - ./mirakc/epg:/var/lib/mirakc/epg
  #     - ./mirakc/config.yaml:/etc/mirakc/config.yml:ro
  #   environment:
  #     TZ: Asia/Tokyo
  #     RUST_LOG: info
  #   devices:
  #     - /dev/px4video0
  #     - /dev/px4video1
  #     - /dev/px4video2
  #     - /dev/px4video3
  #   ports:
  #     - 40772:40772

  # bcas:
  #   build: ./bcas
  #   container_name: bcas
  #   init: true
  #   restart: unless-stopped
  #   network_mode: host
  #   environment:
  #     TZ: Asia/Tokyo
  #   devices:
  #     # ICカードリーダーを追加
  #     - /dev/bus/usb
  #   ports:
  #     - 40774:40774/tcp

  # b25:
  #   build: ./b25
  #   container_name: b25
  #   depends_on:
  #     - bcas
  #   init: true
  #   restart: unless-stopped
  #   network_mode: host
  #   environment:
  #     BCAS_SERVER: 127.0.0.1:40774
  #     TZ: Asia/Tokyo
  #   ports:
  #     - 40773:40773/tcp

  mirakurun:
    container_name: mirakurun-4.0.0
    build:
      context: "./mirakurun"
    cap_add:
      - SYS_ADMIN
      - SYS_NICE
    networks:
      - tv
    ports:
      - "40772:40772"
      - "9229:9229"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mirakurun/conf:/app-config
      - ./mirakurun/data:/app-data
    environment:
      TZ: "Asia/Tokyo"
    devices:
      - /dev/bus:/dev/bus
      - /dev/px4video0:/dev/px4video0
      - /dev/px4video1:/dev/px4video1
      - /dev/px4video2:/dev/px4video2
      - /dev/px4video3:/dev/px4video3
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-file: "1"
        max-size: 10m

  edcb_chscan:
    container_name: EDCB_ChScan
    build:
      context: ./EDCB
    init: true
    networks:
      - tv
    depends_on:
      - mirakurun
      # - b25
    command: /usr/local/bin/EpgDataCap_Bon -d BonDriver_LinuxMirakc.so -chscan
    volumes:
      - type: bind
        source: "./EDCB/Common.ini"
        target: "/var/local/edcb/Common.ini"
      - type: bind
        source: "./EDCB/EpgDataCap_Bon.ini"
        target: "/var/local/edcb/EpgDataCap_Bon.ini"
      - type: bind
        source: "./EDCB/EpgTimerSrv.ini"
        target: "/var/local/edcb/EpgTimerSrv.ini"
      - type: bind
        source: "./EDCB/Setting"
        target: "/var/local/edcb/Setting"

  edcb:
    container_name: EDCB
    build:
      context: ./EDCB
    depends_on:
      mirakurun:
        condition: service_started
      # b25:
      #   condition: service_started
      edcb_chscan:
        condition: service_completed_successfully
    init: true
    restart: unless-stopped
    networks:
      - tv
    volumes:
      - type: bind
        source: "./EDCB/Common.ini"
        target: "/var/local/edcb/Common.ini"
      - type: bind
        source: "./EDCB/EpgDataCap_Bon.ini"
        target: "/var/local/edcb/EpgDataCap_Bon.ini"
      - type: bind
        source: "./EDCB/EpgTimerSrv.ini"
        target: "/var/local/edcb/EpgTimerSrv.ini"
      - type: bind
        source: "./EDCB/Setting"
        target: "/var/local/edcb/Setting"
      - type: bind
        source: "./EDCB/record"
        target: "/record"
    ports:
      - 4510:4510
      - 5510:5510

  konomitv:
    container_name: KonomiTV
    build:
      context: https://github.com/tsukumijima/KonomiTV.git
      dockerfile: Dockerfile
    init: true
    restart: unless-stopped
    networks:
      - tv
    depends_on:
      - mirakurun
      # - b25
      - edcb
    volumes:
      - type: bind
        source: './KonomiTV/config.yaml'
        target: '/code/config.yaml'
      - type: bind
        source: './KonomiTV/server/data/'
        target: '/code/server/data/'
      - type: bind
        source: './KonomiTV/server/logs/'
        target: '/code/server/logs/'
      - type: bind
        source: './KonomiTV/data/record'
        target: '/host-rootfs/KonomiTV/data/record'
      - type: bind
        source: './KonomiTV/data/capture'
        target: '/host-rootfs/KonomiTV/data/capture'
    devices:
      - '/dev/dri/:/dev/dri/'
    ports:
      - 7000:7000

  mysql:
    image: mariadb:10.5
    volumes:
      - mysql-db:/var/lib/mysql
    environment:
      MYSQL_USER: epgstation
      MYSQL_PASSWORD: epgstation
      MYSQL_ROOT_PASSWORD: epgstation
      MYSQL_DATABASE: epgstation
      TZ: "Asia/Tokyo"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --performance-schema=false --expire_logs_days=1
    restart: unless-stopped
    networks:
      - tv
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  epgstation:
    build:
      context: "./epgstation"
      dockerfile: "debian.Dockerfile"
    volumes:
      - ./epgstation/config:/app/config
      - ./epgstation/data:/app/data
      - ./epgstation/thumbnail:/app/thumbnail
      - ./epgstation/logs:/app/logs
      - ./recorded:/app/recorded
    environment:
      TZ: "Asia/Tokyo"
    networks:
      - tv
    depends_on:
      - mirakurun
      - mysql
    ports:
      - "9999:8888"
      - "9998:8889"
    restart: unless-stopped

volumes:
    mysql-db:
        driver: local
